#pragma version 10
intcblock 1 0 6 80
bytecblock 0x756e6976657273616c4964 0x

// This TEAL was generated by TEALScript v0.106.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
intc 2 // 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication()void
*abi_route_createApplication:
	// execute createApplication()void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(): void
createApplication:
	proto 0 0

	// contracts/ARC11550Transfer.algo.ts:22
	// this.universalId.value = 2 ** 64 - 1
	bytec 0 //  "universalId"
	pushint 2
	pushint 64
	exp
	intc 0 // 1
	-
	app_global_put
	retsub

// arc11550_mint(uint64,(byte[32],byte[8],uint64,uint64,address))uint64
*abi_route_arc11550_mint:
	// The ABI return prefix
	pushbytes 0x151f7c75

	// params: (byte[32],byte[8],uint64,uint64,address)
	txna ApplicationArgs 2
	dup
	len
	pushint 88
	==

	// argument 0 (params) for arc11550_mint must be a (byte[32],byte[8],uint64,uint64,address)
	assert

	// dataApp: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_mint(uint64,(byte[32],byte[8],uint64,uint64,address))uint64
	callsub arc11550_mint
	itob
	concat
	log
	intc 0 // 1
	return

// arc11550_mint(dataApp: AppID, params: Params): Id
arc11550_mint:
	proto 2 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 1 // 0x
	dup

	// contracts/ARC11550Transfer.algo.ts:26
	// uid = this.universalId.value
	bytec 0 //  "universalId"
	app_global_get
	frame_bury 0 // uid: uint64

	// contracts/ARC11550Transfer.algo.ts:27
	// this.universalId.value -= 1
	bytec 0 //  "universalId"
	app_global_get
	intc 0 // 1
	-
	bytec 0 //  "universalId"
	swap
	app_global_put

	// contracts/ARC11550Transfer.algo.ts:29
	// assetId = sendMethodCall<typeof ARC11550Data.prototype.doMint>({ methodArgs: [params] })
	itxn_begin
	intc 2 //  appl
	itxn_field TypeEnum
	pushbytes 0x41057855 // method "doMint((byte[32],byte[8],uint64,uint64,address))uint64"
	itxn_field ApplicationArgs

	// contracts/ARC11550Transfer.algo.ts:29
	// methodArgs: [params]
	frame_dig -2 // params: Params
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	intc 1 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	intc 0 // 1
	-
	itxnas Logs
	extract 4 0
	btoi
	frame_bury 1 // assetId: uint64

	// contracts/ARC11550Transfer.algo.ts:31
	// this.idMapping(uid).value = { dataApp: dataApp, id: assetId }
	pushbytes 0x6964 // "id"
	frame_dig 0 // uid: uint64
	itob
	concat
	frame_dig -1 // dataApp: AppID
	itob
	frame_dig 1 // assetId: uint64
	itob
	concat
	box_put

	// contracts/ARC11550Transfer.algo.ts:32
	// return assetId;
	frame_dig 1 // assetId: uint64

	// set the subroutine return value
	frame_bury 0

	// pop all local variables from the stack
	popn 1
	retsub

// arc11550_transfer(uint64,(uint64,address,address,uint64)[])void
*abi_route_arc11550_transfer:
	// transfers: (uint64,address,address,uint64)[]
	txna ApplicationArgs 2
	extract 2 0

	// dataApp: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_transfer(uint64,(uint64,address,address,uint64)[])void
	callsub arc11550_transfer
	intc 0 // 1
	return

// arc11550_transfer(dataApp: AppID, transfers: Transfer[]): void
arc11550_transfer:
	proto 2 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 1 // 0x

	// contracts/ARC11550Transfer.algo.ts:36
	// transferHookApp = sendMethodCall<typeof ARC11550Data.prototype.arc11550_transferHookApp>({
	//       applicationID: dataApp,
	//     })
	itxn_begin
	intc 2 //  appl
	itxn_field TypeEnum
	pushbytes 0x091ca2b7 // method "arc11550_transferHookApp()uint64"
	itxn_field ApplicationArgs

	// contracts/ARC11550Transfer.algo.ts:37
	// applicationID: dataApp
	frame_dig -1 // dataApp: AppID
	itxn_field ApplicationID

	// Fee field not set, defaulting to 0
	intc 1 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	intc 0 // 1
	-
	itxnas Logs
	extract 4 0
	btoi
	frame_bury 0 // transferHookApp: uint64

	// *if0_condition
	// contracts/ARC11550Transfer.algo.ts:41
	// transferHookApp
	frame_dig 0 // transferHookApp: uint64
	bz *if0_end

	// *if0_consequent
	// contracts/ARC11550Transfer.algo.ts:42
	// assert(
	//         sendMethodCall<typeof ARC11550TransferHook.prototype.approved>({
	//           applicationID: transferHookApp,
	//           methodArgs: [this.txn.sender, transfers],
	//         })
	//       )
	itxn_begin
	intc 2 //  appl
	itxn_field TypeEnum
	pushbytes 0xb4c17a7b // method "approved(address,(uint64,address,address,uint64)[])bool"
	itxn_field ApplicationArgs

	// contracts/ARC11550Transfer.algo.ts:44
	// applicationID: transferHookApp
	frame_dig 0 // transferHookApp: uint64
	itxn_field ApplicationID

	// contracts/ARC11550Transfer.algo.ts:45
	// methodArgs: [this.txn.sender, transfers]
	txn Sender
	itxn_field ApplicationArgs
	frame_dig -2 // transfers: Transfer[]
	dup
	len
	intc 3 // 80
	/
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	intc 1 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	intc 0 // 1
	-
	itxnas Logs
	extract 4 0
	intc 1 // 0
	getbit
	assert

*if0_end:
	// contracts/ARC11550Transfer.algo.ts:50
	// sendMethodCall<typeof ARC11550Data.prototype.doTransfers>({
	//       applicationID: dataApp,
	//       methodArgs: [transfers],
	//     })
	itxn_begin
	intc 2 //  appl
	itxn_field TypeEnum
	pushbytes 0x62b5078b // method "doTransfers((uint64,address,address,uint64)[])void"
	itxn_field ApplicationArgs

	// contracts/ARC11550Transfer.algo.ts:51
	// applicationID: dataApp
	frame_dig -1 // dataApp: AppID
	itxn_field ApplicationID

	// contracts/ARC11550Transfer.algo.ts:52
	// methodArgs: [transfers]
	frame_dig -2 // transfers: Transfer[]
	dup
	len
	intc 3 // 80
	/
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	intc 1 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x0cc33604 // method "arc11550_mint(uint64,(byte[32],byte[8],uint64,uint64,address))uint64"
	pushbytes 0x61bacfc8 // method "arc11550_transfer(uint64,(uint64,address,address,uint64)[])void"
	txna ApplicationArgs 0
	match *abi_route_arc11550_mint *abi_route_arc11550_transfer

	// this contract does not implement the given ABI method for call NoOp
	err