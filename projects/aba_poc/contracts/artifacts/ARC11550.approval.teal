#pragma version 10
intcblock 0 80 1 8 32 40 6 72
bytecblock 0x151f7c75 0x70 0x62 0x7472616e73666572486f6f6b417070 0x

// This TEAL was generated by TEALScript v0.106.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
intc 6 // 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(uint64)void
*abi_route_createApplication:
	// app: uint64
	txna ApplicationArgs 1
	btoi

	// execute createApplication(uint64)void
	callsub createApplication
	intc 2 // 1
	return

// createApplication(app: AppID): void
createApplication:
	proto 1 0

	// contracts/ARC11550.algo.ts:38
	// this.transferHookApp.value = app
	bytec 3 //  "transferHookApp"
	frame_dig -1 // app: AppID
	app_global_put

	// contracts/ARC11550.algo.ts:39
	// this.nextId.value = 0
	pushbytes 0x6e6578744964 // "nextId"
	intc 0 // 0
	app_global_put
	retsub

// arc11550_name(uint64)byte[32]
*abi_route_arc11550_name:
	// The ABI return prefix
	bytec 0 // 0x151f7c75

	// id: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_name(uint64)byte[32]
	callsub arc11550_name
	concat
	log
	intc 2 // 1
	return

// arc11550_name(id: ARC11550Id): bytes<32>
arc11550_name:
	proto 1 1

	// contracts/ARC11550.algo.ts:43
	// return this.params(id).value.name;
	intc 0 // 0
	intc 4 // 32
	bytec 1 //  "p"
	frame_dig -1 // id: ARC11550Id
	itob
	concat
	cover 2
	box_extract
	retsub

// arc11550_symbol(uint64)byte[8]
*abi_route_arc11550_symbol:
	// The ABI return prefix
	bytec 0 // 0x151f7c75

	// id: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_symbol(uint64)byte[8]
	callsub arc11550_symbol
	concat
	log
	intc 2 // 1
	return

// arc11550_symbol(id: ARC11550Id): bytes<8>
arc11550_symbol:
	proto 1 1

	// contracts/ARC11550.algo.ts:47
	// return this.params(id).value.symbol;
	intc 4 //  headOffset
	intc 3 // 8
	bytec 1 //  "p"
	frame_dig -1 // id: ARC11550Id
	itob
	concat
	cover 2
	box_extract
	retsub

// arc11550_decimals(uint64)uint32
*abi_route_arc11550_decimals:
	// The ABI return prefix
	bytec 0 // 0x151f7c75

	// id: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_decimals(uint64)uint32
	callsub arc11550_decimals
	itob
	dup
	bitlen
	intc 4 // 32
	<=

	// arc11550_decimals return value overflowed 32 bits
	assert
	extract 4 4
	concat
	log
	intc 2 // 1
	return

// arc11550_decimals(id: ARC11550Id): uint32
arc11550_decimals:
	proto 1 1

	// contracts/ARC11550.algo.ts:51
	// return this.params(id).value.decmimals;
	pushint 48 // headOffset
	pushint 4
	bytec 1 //  "p"
	frame_dig -1 // id: ARC11550Id
	itob
	concat
	cover 2
	box_extract
	btoi
	retsub

// arc11550_totalSupply(uint64)uint64
*abi_route_arc11550_totalSupply:
	// The ABI return prefix
	bytec 0 // 0x151f7c75

	// id: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_totalSupply(uint64)uint64
	callsub arc11550_totalSupply
	itob
	concat
	log
	intc 2 // 1
	return

// arc11550_totalSupply(id: ARC11550Id): uint64
arc11550_totalSupply:
	proto 1 1

	// contracts/ARC11550.algo.ts:55
	// return this.params(id).value.total;
	intc 5 //  headOffset
	intc 3 // 8
	bytec 1 //  "p"
	frame_dig -1 // id: ARC11550Id
	itob
	concat
	cover 2
	box_extract
	btoi
	retsub

// arc11550_balanceOf(uint64,address)uint64
*abi_route_arc11550_balanceOf:
	// The ABI return prefix
	bytec 0 // 0x151f7c75

	// account: address
	txna ApplicationArgs 2
	dup
	len
	intc 4 // 32
	==

	// argument 0 (account) for arc11550_balanceOf must be a address
	assert

	// id: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_balanceOf(uint64,address)uint64
	callsub arc11550_balanceOf
	itob
	concat
	log
	intc 2 // 1
	return

// arc11550_balanceOf(id: ARC11550Id, account: Address): uint64
arc11550_balanceOf:
	proto 2 1

	// contracts/ARC11550.algo.ts:59
	// return this.balances({ id: id, address: account }).value;
	bytec 2 //  "b"
	frame_dig -1 // id: ARC11550Id
	itob
	frame_dig -2 // account: Address
	concat
	concat
	box_get

	// box value does not exist: this.balances({ id: id, address: account }).value
	assert
	btoi
	retsub

// arc11550_params(uint64)(byte[32],byte[8],uint64,uint32)
*abi_route_arc11550_params:
	// The ABI return prefix
	bytec 0 // 0x151f7c75

	// id: uint64
	txna ApplicationArgs 1
	btoi

	// execute arc11550_params(uint64)(byte[32],byte[8],uint64,uint32)
	callsub arc11550_params
	concat
	log
	intc 2 // 1
	return

// arc11550_params(id: ARC11550Id): AssetParams
arc11550_params:
	proto 1 1

	// contracts/ARC11550.algo.ts:63
	// return this.params(id).value;
	bytec 1 //  "p"
	frame_dig -1 // id: ARC11550Id
	itob
	concat
	box_get

	// box value does not exist: this.params(id).value
	assert
	retsub

// arc11550_transfer((uint64,address,address,uint64)[])void
*abi_route_arc11550_transfer:
	// transfers: (uint64,address,address,uint64)[]
	txna ApplicationArgs 1
	extract 2 0

	// execute arc11550_transfer((uint64,address,address,uint64)[])void
	callsub arc11550_transfer
	intc 2 // 1
	return

// arc11550_transfer(transfers: Transfer[]): void
arc11550_transfer:
	proto 1 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 4 // 0x
	dup

	// contracts/ARC11550.algo.ts:67
	// assert(
	//       sendMethodCall<typeof ARC11550TransferHook.prototype.approved>({
	//         applicationID: this.transferHookApp.value,
	//         methodArgs: [this.txn.sender, transfers],
	//       })
	//     )
	itxn_begin
	intc 6 //  appl
	itxn_field TypeEnum
	pushbytes 0xb4c17a7b // method "approved(address,(uint64,address,address,uint64)[])bool"
	itxn_field ApplicationArgs

	// contracts/ARC11550.algo.ts:69
	// applicationID: this.transferHookApp.value
	bytec 3 //  "transferHookApp"
	app_global_get
	itxn_field ApplicationID

	// contracts/ARC11550.algo.ts:70
	// methodArgs: [this.txn.sender, transfers]
	txn Sender
	itxn_field ApplicationArgs
	frame_dig -1 // transfers: Transfer[]
	dup
	len
	intc 1 // 80
	/
	itob
	extract 6 2
	swap
	concat
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	intc 0 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn NumLogs
	intc 2 // 1
	-
	itxnas Logs
	extract 4 0
	intc 0 // 0
	getbit
	assert

	// contracts/ARC11550.algo.ts:74
	// for (let i = 0; i < transfers.length; i += 1)
	intc 0 // 0
	frame_bury 0 // i: uint64

*for_0:
	// contracts/ARC11550.algo.ts:74
	// i < transfers.length
	frame_dig 0 // i: uint64
	frame_dig -1 // transfers: Transfer[]
	len
	intc 1 // 80
	/
	<
	bz *for_0_end
	frame_dig 0 // i: uint64
	frame_bury 1 // accessor: accessor//0//t

	// contracts/ARC11550.algo.ts:76
	// this.balances({ id: t.id, address: t.from }).value -= t.amount
	bytec 2 //  "b"
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 0 //  headOffset
	+
	load 255 // full array
	swap
	intc 3 // 8
	extract3
	btoi
	itob
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 3 //  headOffset
	+
	load 255 // full array
	swap
	intc 4 // 32
	extract3
	concat
	concat
	box_get

	// box value does not exist: this.balances({ id: t.id, address: t.from }).value
	assert
	btoi
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 7 //  headOffset
	+
	load 255 // full array
	swap
	intc 3 // 8
	extract3
	btoi
	-
	bytec 2 //  "b"
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 0 //  headOffset
	+
	load 255 // full array
	swap
	intc 3 // 8
	extract3
	btoi
	itob
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 3 //  headOffset
	+
	load 255 // full array
	swap
	intc 4 // 32
	extract3
	concat
	concat
	swap
	itob
	box_put

	// contracts/ARC11550.algo.ts:77
	// this.balances({ id: t.id, address: t.to }).value += t.amount
	bytec 2 //  "b"
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 0 //  headOffset
	+
	load 255 // full array
	swap
	intc 3 // 8
	extract3
	btoi
	itob
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 5 //  headOffset
	+
	load 255 // full array
	swap
	intc 4 // 32
	extract3
	concat
	concat
	box_get

	// box value does not exist: this.balances({ id: t.id, address: t.to }).value
	assert
	btoi
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 7 //  headOffset
	+
	load 255 // full array
	swap
	intc 3 // 8
	extract3
	btoi
	+
	bytec 2 //  "b"
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 0 //  headOffset
	+
	load 255 // full array
	swap
	intc 3 // 8
	extract3
	btoi
	itob
	frame_dig -1 // transfers: Transfer[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // saved accessor: accessor//0//t
	intc 1 // 80
	* // acc * typeLength
	+
	intc 5 //  headOffset
	+
	load 255 // full array
	swap
	intc 4 // 32
	extract3
	concat
	concat
	swap
	itob
	box_put

*for_0_continue:
	// contracts/ARC11550.algo.ts:74
	// i += 1
	frame_dig 0 // i: uint64
	intc 2 // 1
	+
	frame_bury 0 // i: uint64
	b *for_0

*for_0_end:
	retsub

*create_NoOp:
	pushbytes 0x973b616f // method "createApplication(uint64)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x0b60a59e // method "arc11550_name(uint64)byte[32]"
	pushbytes 0xb221dc8f // method "arc11550_symbol(uint64)byte[8]"
	pushbytes 0x835a8df3 // method "arc11550_decimals(uint64)uint32"
	pushbytes 0xef57de42 // method "arc11550_totalSupply(uint64)uint64"
	pushbytes 0xd04acbc2 // method "arc11550_balanceOf(uint64,address)uint64"
	pushbytes 0xe1110eae // method "arc11550_params(uint64)(byte[32],byte[8],uint64,uint32)"
	pushbytes 0x45f022a5 // method "arc11550_transfer((uint64,address,address,uint64)[])void"
	txna ApplicationArgs 0
	match *abi_route_arc11550_name *abi_route_arc11550_symbol *abi_route_arc11550_decimals *abi_route_arc11550_totalSupply *abi_route_arc11550_balanceOf *abi_route_arc11550_params *abi_route_arc11550_transfer

	// this contract does not implement the given ABI method for call NoOp
	err