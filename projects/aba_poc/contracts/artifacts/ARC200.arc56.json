{
  "name": "ARC200",
  "desc": "",
  "methods": [
    {
      "name": "arc200_name",
      "args": [],
      "returns": {
        "type": "byte[32]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_symbol",
      "args": [],
      "returns": {
        "type": "byte[8]"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_decimals",
      "args": [],
      "returns": {
        "type": "uint8"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_totalSupply",
      "args": [],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_balanceOf",
      "args": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_transferFrom",
      "args": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "bool"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_transfer",
      "args": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "bool"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_approve",
      "args": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "returns": {
        "type": "bool"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "arc200_allowance",
      "args": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "returns": {
        "type": "uint256"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "events": [
    {
      "name": "arc200_Transfer",
      "args": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "desc": ""
    },
    {
      "name": "arc200_Approval",
      "args": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "desc": ""
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "Approval": [
      {
        "name": "owner",
        "type": "address"
      },
      {
        "name": "spender",
        "type": "address"
      }
    ]
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 4,
        "ints": 0
      },
      "local": {
        "bytes": 0,
        "ints": 0
      }
    },
    "keys": {
      "global": {
        "name": {
          "key": "bmFtZQ==",
          "keyType": "AVMBytes",
          "valueType": "byte[32]"
        },
        "symbol": {
          "key": "c3ltYm9s",
          "keyType": "AVMBytes",
          "valueType": "byte[8]"
        },
        "decimals": {
          "key": "ZGVjaW1hbHM=",
          "keyType": "AVMBytes",
          "valueType": "uint8"
        },
        "totalSupply": {
          "key": "dG90YWxTdXBwbHk=",
          "keyType": "AVMBytes",
          "valueType": "uint256"
        }
      },
      "local": {},
      "box": {}
    },
    "maps": {
      "global": {},
      "local": {},
      "box": {
        "balances": {
          "keyType": "address",
          "valueType": "uint256"
        },
        "allowances": {
          "keyType": "Approval",
          "valueType": "uint256"
        }
      }
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": {
    "approval": {
      "sourceInfo": [
        {
          "teal": 1,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            0
          ]
        },
        {
          "teal": 2,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ]
        },
        {
          "teal": 3,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50
          ]
        },
        {
          "teal": 15,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            51,
            52
          ]
        },
        {
          "teal": 16,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            53
          ]
        },
        {
          "teal": 17,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            54,
            55
          ]
        },
        {
          "teal": 18,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            56
          ]
        },
        {
          "teal": 19,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            57,
            58
          ]
        },
        {
          "teal": 20,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            59
          ]
        },
        {
          "teal": 21,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            60,
            61,
            62,
            63,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            82,
            83,
            84,
            85
          ]
        },
        {
          "teal": 25,
          "source": "contracts/ARC200.algo.ts:8",
          "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
          "pc": [
            86
          ]
        },
        {
          "teal": 30,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            87
          ]
        },
        {
          "teal": 33,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            88,
            89,
            90
          ]
        },
        {
          "teal": 34,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            91
          ]
        },
        {
          "teal": 35,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            92
          ]
        },
        {
          "teal": 36,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            93
          ]
        },
        {
          "teal": 37,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            94
          ]
        },
        {
          "teal": 41,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            95,
            96,
            97
          ]
        },
        {
          "teal": 45,
          "source": "contracts/ARC200.algo.ts:34",
          "pc": [
            98,
            99,
            100,
            101,
            102,
            103
          ]
        },
        {
          "teal": 46,
          "source": "contracts/ARC200.algo.ts:34",
          "pc": [
            104
          ]
        },
        {
          "teal": 47,
          "source": "contracts/ARC200.algo.ts:33",
          "pc": [
            105
          ]
        },
        {
          "teal": 52,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            106
          ]
        },
        {
          "teal": 55,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            107,
            108,
            109
          ]
        },
        {
          "teal": 56,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            110
          ]
        },
        {
          "teal": 57,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            111
          ]
        },
        {
          "teal": 58,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            112
          ]
        },
        {
          "teal": 59,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            113
          ]
        },
        {
          "teal": 63,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            114,
            115,
            116
          ]
        },
        {
          "teal": 67,
          "source": "contracts/ARC200.algo.ts:38",
          "pc": [
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124
          ]
        },
        {
          "teal": 68,
          "source": "contracts/ARC200.algo.ts:38",
          "pc": [
            125
          ]
        },
        {
          "teal": 69,
          "source": "contracts/ARC200.algo.ts:37",
          "pc": [
            126
          ]
        },
        {
          "teal": 74,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            127
          ]
        },
        {
          "teal": 77,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            128,
            129,
            130
          ]
        },
        {
          "teal": 78,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            131
          ]
        },
        {
          "teal": 79,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            132
          ]
        },
        {
          "teal": 80,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            133
          ]
        },
        {
          "teal": 81,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            134,
            135
          ]
        },
        {
          "teal": 82,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            136
          ]
        },
        {
          "teal": 85,
          "source": "contracts/ARC200.algo.ts:41",
          "errorMessage": "arc200_decimals return value overflowed 8 bits",
          "pc": [
            137
          ]
        },
        {
          "teal": 86,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            138,
            139,
            140
          ]
        },
        {
          "teal": 87,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            141
          ]
        },
        {
          "teal": 88,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            142
          ]
        },
        {
          "teal": 89,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            143
          ]
        },
        {
          "teal": 90,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            144
          ]
        },
        {
          "teal": 94,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            145,
            146,
            147
          ]
        },
        {
          "teal": 98,
          "source": "contracts/ARC200.algo.ts:42",
          "pc": [
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157
          ]
        },
        {
          "teal": 99,
          "source": "contracts/ARC200.algo.ts:42",
          "pc": [
            158
          ]
        },
        {
          "teal": 100,
          "source": "contracts/ARC200.algo.ts:42",
          "pc": [
            159
          ]
        },
        {
          "teal": 101,
          "source": "contracts/ARC200.algo.ts:41",
          "pc": [
            160
          ]
        },
        {
          "teal": 106,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            161
          ]
        },
        {
          "teal": 109,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            162,
            163,
            164
          ]
        },
        {
          "teal": 110,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            165
          ]
        },
        {
          "teal": 111,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            166
          ]
        },
        {
          "teal": 112,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            167
          ]
        },
        {
          "teal": 113,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            168
          ]
        },
        {
          "teal": 116,
          "source": "contracts/ARC200.algo.ts:45",
          "errorMessage": "arc200_totalSupply return value overflowed 256 bits",
          "pc": [
            169
          ]
        },
        {
          "teal": 117,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            170
          ]
        },
        {
          "teal": 118,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            171
          ]
        },
        {
          "teal": 119,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            172
          ]
        },
        {
          "teal": 120,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            173
          ]
        },
        {
          "teal": 121,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            174
          ]
        },
        {
          "teal": 122,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            175
          ]
        },
        {
          "teal": 123,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            176
          ]
        },
        {
          "teal": 124,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            177
          ]
        },
        {
          "teal": 125,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            178
          ]
        },
        {
          "teal": 126,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            179
          ]
        },
        {
          "teal": 127,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            180
          ]
        },
        {
          "teal": 128,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            181
          ]
        },
        {
          "teal": 129,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            182
          ]
        },
        {
          "teal": 133,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            183,
            184,
            185
          ]
        },
        {
          "teal": 137,
          "source": "contracts/ARC200.algo.ts:46",
          "pc": [
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198
          ]
        },
        {
          "teal": 138,
          "source": "contracts/ARC200.algo.ts:46",
          "pc": [
            199
          ]
        },
        {
          "teal": 139,
          "source": "contracts/ARC200.algo.ts:45",
          "pc": [
            200
          ]
        },
        {
          "teal": 144,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            201
          ]
        },
        {
          "teal": 147,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            202,
            203,
            204
          ]
        },
        {
          "teal": 148,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            205
          ]
        },
        {
          "teal": 149,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            206
          ]
        },
        {
          "teal": 150,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            207
          ]
        },
        {
          "teal": 151,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            208
          ]
        },
        {
          "teal": 154,
          "source": "contracts/ARC200.algo.ts:49",
          "errorMessage": "argument 0 (account) for arc200_balanceOf must be a address",
          "pc": [
            209
          ]
        },
        {
          "teal": 157,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            210,
            211,
            212
          ]
        },
        {
          "teal": 158,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            213
          ]
        },
        {
          "teal": 159,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            214
          ]
        },
        {
          "teal": 160,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            215
          ]
        },
        {
          "teal": 161,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            216
          ]
        },
        {
          "teal": 164,
          "source": "contracts/ARC200.algo.ts:49",
          "errorMessage": "arc200_balanceOf return value overflowed 256 bits",
          "pc": [
            217
          ]
        },
        {
          "teal": 165,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            218
          ]
        },
        {
          "teal": 166,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            219
          ]
        },
        {
          "teal": 167,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            220
          ]
        },
        {
          "teal": 168,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            221
          ]
        },
        {
          "teal": 169,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            222
          ]
        },
        {
          "teal": 170,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            223
          ]
        },
        {
          "teal": 171,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            224
          ]
        },
        {
          "teal": 172,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            225
          ]
        },
        {
          "teal": 173,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            226
          ]
        },
        {
          "teal": 174,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            227
          ]
        },
        {
          "teal": 175,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            228
          ]
        },
        {
          "teal": 176,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            229
          ]
        },
        {
          "teal": 177,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            230
          ]
        },
        {
          "teal": 181,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            231,
            232,
            233
          ]
        },
        {
          "teal": 185,
          "source": "contracts/ARC200.algo.ts:50",
          "pc": [
            234,
            235
          ]
        },
        {
          "teal": 186,
          "source": "contracts/ARC200.algo.ts:50",
          "pc": [
            236
          ]
        },
        {
          "teal": 189,
          "source": "contracts/ARC200.algo.ts:50",
          "errorMessage": "box value does not exist: this.balances(account).value",
          "pc": [
            237
          ]
        },
        {
          "teal": 190,
          "source": "contracts/ARC200.algo.ts:49",
          "pc": [
            238
          ]
        },
        {
          "teal": 194,
          "source": "contracts/ARC200.algo.ts:53",
          "pc": [
            239,
            240,
            241
          ]
        },
        {
          "teal": 198,
          "source": "contracts/ARC200.algo.ts:54",
          "pc": [
            242,
            243
          ]
        },
        {
          "teal": 199,
          "source": "contracts/ARC200.algo.ts:54",
          "pc": [
            244
          ]
        },
        {
          "teal": 202,
          "source": "contracts/ARC200.algo.ts:54",
          "errorMessage": "box value does not exist: this.balances(from).value",
          "pc": [
            245
          ]
        },
        {
          "teal": 203,
          "source": "contracts/ARC200.algo.ts:54",
          "pc": [
            246,
            247
          ]
        },
        {
          "teal": 204,
          "source": "contracts/ARC200.algo.ts:54",
          "pc": [
            248
          ]
        },
        {
          "teal": 205,
          "source": "contracts/ARC200.algo.ts:54",
          "pc": [
            249,
            250
          ]
        },
        {
          "teal": 206,
          "source": "contracts/ARC200.algo.ts:54",
          "pc": [
            251
          ]
        },
        {
          "teal": 207,
          "source": "contracts/ARC200.algo.ts:54",
          "pc": [
            252
          ]
        },
        {
          "teal": 211,
          "source": "contracts/ARC200.algo.ts:55",
          "pc": [
            253,
            254
          ]
        },
        {
          "teal": 212,
          "source": "contracts/ARC200.algo.ts:55",
          "pc": [
            255
          ]
        },
        {
          "teal": 215,
          "source": "contracts/ARC200.algo.ts:55",
          "errorMessage": "box value does not exist: this.balances(to).value",
          "pc": [
            256
          ]
        },
        {
          "teal": 216,
          "source": "contracts/ARC200.algo.ts:55",
          "pc": [
            257,
            258
          ]
        },
        {
          "teal": 217,
          "source": "contracts/ARC200.algo.ts:55",
          "pc": [
            259
          ]
        },
        {
          "teal": 218,
          "source": "contracts/ARC200.algo.ts:55",
          "pc": [
            260,
            261
          ]
        },
        {
          "teal": 219,
          "source": "contracts/ARC200.algo.ts:55",
          "pc": [
            262
          ]
        },
        {
          "teal": 220,
          "source": "contracts/ARC200.algo.ts:55",
          "pc": [
            263
          ]
        },
        {
          "teal": 224,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            264,
            265,
            266,
            267,
            268,
            269
          ]
        },
        {
          "teal": 225,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            270,
            271
          ]
        },
        {
          "teal": 226,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            272,
            273
          ]
        },
        {
          "teal": 227,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            274
          ]
        },
        {
          "teal": 228,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            275,
            276
          ]
        },
        {
          "teal": 229,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            277
          ]
        },
        {
          "teal": 230,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            278
          ]
        },
        {
          "teal": 231,
          "source": "contracts/ARC200.algo.ts:56",
          "pc": [
            279
          ]
        },
        {
          "teal": 235,
          "source": "contracts/ARC200.algo.ts:58",
          "pc": [
            280
          ]
        },
        {
          "teal": 236,
          "source": "contracts/ARC200.algo.ts:53",
          "pc": [
            281
          ]
        },
        {
          "teal": 241,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            282
          ]
        },
        {
          "teal": 244,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            283,
            284,
            285
          ]
        },
        {
          "teal": 245,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            286
          ]
        },
        {
          "teal": 246,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            287
          ]
        },
        {
          "teal": 247,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            288
          ]
        },
        {
          "teal": 248,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            289
          ]
        },
        {
          "teal": 251,
          "source": "contracts/ARC200.algo.ts:61",
          "errorMessage": "argument 0 (amount) for arc200_transferFrom must be a uint256",
          "pc": [
            290
          ]
        },
        {
          "teal": 254,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            291,
            292,
            293
          ]
        },
        {
          "teal": 255,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            294
          ]
        },
        {
          "teal": 256,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            295
          ]
        },
        {
          "teal": 257,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            296
          ]
        },
        {
          "teal": 258,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            297
          ]
        },
        {
          "teal": 261,
          "source": "contracts/ARC200.algo.ts:61",
          "errorMessage": "argument 1 (to) for arc200_transferFrom must be a address",
          "pc": [
            298
          ]
        },
        {
          "teal": 264,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            299,
            300,
            301
          ]
        },
        {
          "teal": 265,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            302
          ]
        },
        {
          "teal": 266,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            303
          ]
        },
        {
          "teal": 267,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            304
          ]
        },
        {
          "teal": 268,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            305
          ]
        },
        {
          "teal": 271,
          "source": "contracts/ARC200.algo.ts:61",
          "errorMessage": "argument 2 (from) for arc200_transferFrom must be a address",
          "pc": [
            306
          ]
        },
        {
          "teal": 274,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            307,
            308,
            309
          ]
        },
        {
          "teal": 275,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            310
          ]
        },
        {
          "teal": 276,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            311
          ]
        },
        {
          "teal": 277,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            312,
            313
          ]
        },
        {
          "teal": 278,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            314
          ]
        },
        {
          "teal": 279,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            315
          ]
        },
        {
          "teal": 280,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            316
          ]
        },
        {
          "teal": 281,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            317
          ]
        },
        {
          "teal": 282,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            318
          ]
        },
        {
          "teal": 286,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            319,
            320,
            321
          ]
        },
        {
          "teal": 289,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            322
          ]
        },
        {
          "teal": 293,
          "source": "contracts/ARC200.algo.ts:62",
          "pc": [
            323,
            324
          ]
        },
        {
          "teal": 294,
          "source": "contracts/ARC200.algo.ts:62",
          "pc": [
            325,
            326
          ]
        },
        {
          "teal": 295,
          "source": "contracts/ARC200.algo.ts:62",
          "pc": [
            327
          ]
        },
        {
          "teal": 296,
          "source": "contracts/ARC200.algo.ts:62",
          "pc": [
            328,
            329
          ]
        },
        {
          "teal": 300,
          "source": "contracts/ARC200.algo.ts:64",
          "pc": [
            330,
            331
          ]
        },
        {
          "teal": 301,
          "source": "contracts/ARC200.algo.ts:64",
          "pc": [
            332
          ]
        },
        {
          "teal": 304,
          "source": "contracts/ARC200.algo.ts:64",
          "errorMessage": "box value does not exist: this.allowances(approval).value",
          "pc": [
            333
          ]
        },
        {
          "teal": 305,
          "source": "contracts/ARC200.algo.ts:64",
          "pc": [
            334,
            335
          ]
        },
        {
          "teal": 306,
          "source": "contracts/ARC200.algo.ts:64",
          "pc": [
            336
          ]
        },
        {
          "teal": 307,
          "source": "contracts/ARC200.algo.ts:64",
          "pc": [
            337
          ]
        },
        {
          "teal": 311,
          "source": "contracts/ARC200.algo.ts:65",
          "pc": [
            338,
            339
          ]
        },
        {
          "teal": 312,
          "source": "contracts/ARC200.algo.ts:65",
          "pc": [
            340
          ]
        },
        {
          "teal": 315,
          "source": "contracts/ARC200.algo.ts:65",
          "errorMessage": "box value does not exist: this.allowances(approval).value",
          "pc": [
            341
          ]
        },
        {
          "teal": 316,
          "source": "contracts/ARC200.algo.ts:65",
          "pc": [
            342,
            343
          ]
        },
        {
          "teal": 317,
          "source": "contracts/ARC200.algo.ts:65",
          "pc": [
            344
          ]
        },
        {
          "teal": 318,
          "source": "contracts/ARC200.algo.ts:65",
          "pc": [
            345,
            346
          ]
        },
        {
          "teal": 319,
          "source": "contracts/ARC200.algo.ts:65",
          "pc": [
            347
          ]
        },
        {
          "teal": 320,
          "source": "contracts/ARC200.algo.ts:65",
          "pc": [
            348
          ]
        },
        {
          "teal": 324,
          "source": "contracts/ARC200.algo.ts:67",
          "pc": [
            349,
            350
          ]
        },
        {
          "teal": 325,
          "source": "contracts/ARC200.algo.ts:67",
          "pc": [
            351,
            352
          ]
        },
        {
          "teal": 326,
          "source": "contracts/ARC200.algo.ts:67",
          "pc": [
            353,
            354
          ]
        },
        {
          "teal": 327,
          "source": "contracts/ARC200.algo.ts:67",
          "pc": [
            355,
            356,
            357
          ]
        },
        {
          "teal": 330,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            358,
            359
          ]
        },
        {
          "teal": 331,
          "source": "contracts/ARC200.algo.ts:61",
          "pc": [
            360
          ]
        },
        {
          "teal": 336,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            361
          ]
        },
        {
          "teal": 339,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            362,
            363,
            364
          ]
        },
        {
          "teal": 340,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            365
          ]
        },
        {
          "teal": 341,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            366
          ]
        },
        {
          "teal": 342,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            367
          ]
        },
        {
          "teal": 343,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            368
          ]
        },
        {
          "teal": 346,
          "source": "contracts/ARC200.algo.ts:70",
          "errorMessage": "argument 0 (amount) for arc200_transfer must be a uint256",
          "pc": [
            369
          ]
        },
        {
          "teal": 349,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            370,
            371,
            372
          ]
        },
        {
          "teal": 350,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            373
          ]
        },
        {
          "teal": 351,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            374
          ]
        },
        {
          "teal": 352,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            375
          ]
        },
        {
          "teal": 353,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            376
          ]
        },
        {
          "teal": 356,
          "source": "contracts/ARC200.algo.ts:70",
          "errorMessage": "argument 1 (to) for arc200_transfer must be a address",
          "pc": [
            377
          ]
        },
        {
          "teal": 359,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            378,
            379,
            380
          ]
        },
        {
          "teal": 360,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            381
          ]
        },
        {
          "teal": 361,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            382
          ]
        },
        {
          "teal": 362,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            383,
            384
          ]
        },
        {
          "teal": 363,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            385
          ]
        },
        {
          "teal": 364,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            386
          ]
        },
        {
          "teal": 365,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            387
          ]
        },
        {
          "teal": 366,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            388
          ]
        },
        {
          "teal": 367,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            389
          ]
        },
        {
          "teal": 371,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            390,
            391,
            392
          ]
        },
        {
          "teal": 375,
          "source": "contracts/ARC200.algo.ts:71",
          "pc": [
            393,
            394
          ]
        },
        {
          "teal": 376,
          "source": "contracts/ARC200.algo.ts:71",
          "pc": [
            395,
            396
          ]
        },
        {
          "teal": 377,
          "source": "contracts/ARC200.algo.ts:71",
          "pc": [
            397,
            398
          ]
        },
        {
          "teal": 378,
          "source": "contracts/ARC200.algo.ts:71",
          "pc": [
            399,
            400,
            401
          ]
        },
        {
          "teal": 379,
          "source": "contracts/ARC200.algo.ts:70",
          "pc": [
            402
          ]
        },
        {
          "teal": 384,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            403
          ]
        },
        {
          "teal": 387,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            404,
            405,
            406
          ]
        },
        {
          "teal": 388,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            407
          ]
        },
        {
          "teal": 389,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            408
          ]
        },
        {
          "teal": 390,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            409
          ]
        },
        {
          "teal": 391,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            410
          ]
        },
        {
          "teal": 394,
          "source": "contracts/ARC200.algo.ts:74",
          "errorMessage": "argument 0 (value) for arc200_approve must be a uint256",
          "pc": [
            411
          ]
        },
        {
          "teal": 397,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            412,
            413,
            414
          ]
        },
        {
          "teal": 398,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            415
          ]
        },
        {
          "teal": 399,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            416
          ]
        },
        {
          "teal": 400,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            417
          ]
        },
        {
          "teal": 401,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            418
          ]
        },
        {
          "teal": 404,
          "source": "contracts/ARC200.algo.ts:74",
          "errorMessage": "argument 1 (spender) for arc200_approve must be a address",
          "pc": [
            419
          ]
        },
        {
          "teal": 407,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            420,
            421,
            422
          ]
        },
        {
          "teal": 408,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            423
          ]
        },
        {
          "teal": 409,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            424
          ]
        },
        {
          "teal": 410,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            425,
            426
          ]
        },
        {
          "teal": 411,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            427
          ]
        },
        {
          "teal": 412,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            428
          ]
        },
        {
          "teal": 413,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            429
          ]
        },
        {
          "teal": 414,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            430
          ]
        },
        {
          "teal": 415,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            431
          ]
        },
        {
          "teal": 419,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            432,
            433,
            434
          ]
        },
        {
          "teal": 422,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            435
          ]
        },
        {
          "teal": 426,
          "source": "contracts/ARC200.algo.ts:75",
          "pc": [
            436,
            437
          ]
        },
        {
          "teal": 427,
          "source": "contracts/ARC200.algo.ts:75",
          "pc": [
            438,
            439
          ]
        },
        {
          "teal": 428,
          "source": "contracts/ARC200.algo.ts:75",
          "pc": [
            440
          ]
        },
        {
          "teal": 429,
          "source": "contracts/ARC200.algo.ts:75",
          "pc": [
            441,
            442
          ]
        },
        {
          "teal": 434,
          "source": "contracts/ARC200.algo.ts:76",
          "pc": [
            443,
            444
          ]
        },
        {
          "teal": 435,
          "source": "contracts/ARC200.algo.ts:76",
          "pc": [
            445
          ]
        },
        {
          "teal": 436,
          "source": "contracts/ARC200.algo.ts:76",
          "pc": [
            446
          ]
        },
        {
          "teal": 437,
          "source": "contracts/ARC200.algo.ts:76",
          "pc": [
            447
          ]
        },
        {
          "teal": 438,
          "source": "contracts/ARC200.algo.ts:76",
          "pc": [
            448
          ]
        },
        {
          "teal": 439,
          "source": "contracts/ARC200.algo.ts:76",
          "pc": [
            449,
            450,
            451
          ]
        },
        {
          "teal": 444,
          "source": "contracts/ARC200.algo.ts:77",
          "pc": [
            452,
            453
          ]
        },
        {
          "teal": 445,
          "source": "contracts/ARC200.algo.ts:77",
          "pc": [
            454,
            455
          ]
        },
        {
          "teal": 446,
          "source": "contracts/ARC200.algo.ts:77",
          "pc": [
            456
          ]
        },
        {
          "teal": 447,
          "source": "contracts/ARC200.algo.ts:76",
          "pc": [
            457,
            458,
            459
          ]
        },
        {
          "teal": 452,
          "source": "contracts/ARC200.algo.ts:79",
          "pc": [
            460,
            461
          ]
        },
        {
          "teal": 453,
          "source": "contracts/ARC200.algo.ts:79",
          "pc": [
            462
          ]
        },
        {
          "teal": 456,
          "source": "contracts/ARC200.algo.ts:79",
          "errorMessage": "box value does not exist: this.allowances(approval).value",
          "pc": [
            463
          ]
        },
        {
          "teal": 457,
          "source": "contracts/ARC200.algo.ts:79",
          "pc": [
            464,
            465
          ]
        },
        {
          "teal": 458,
          "source": "contracts/ARC200.algo.ts:79",
          "pc": [
            466
          ]
        },
        {
          "teal": 459,
          "source": "contracts/ARC200.algo.ts:79",
          "pc": [
            467,
            468
          ]
        },
        {
          "teal": 460,
          "source": "contracts/ARC200.algo.ts:79",
          "pc": [
            469
          ]
        },
        {
          "teal": 461,
          "source": "contracts/ARC200.algo.ts:79",
          "pc": [
            470
          ]
        },
        {
          "teal": 466,
          "source": "contracts/ARC200.algo.ts:82",
          "pc": [
            471
          ]
        },
        {
          "teal": 469,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            472,
            473
          ]
        },
        {
          "teal": 470,
          "source": "contracts/ARC200.algo.ts:74",
          "pc": [
            474
          ]
        },
        {
          "teal": 475,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            475
          ]
        },
        {
          "teal": 478,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            476,
            477,
            478
          ]
        },
        {
          "teal": 479,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            479
          ]
        },
        {
          "teal": 480,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            480
          ]
        },
        {
          "teal": 481,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            481
          ]
        },
        {
          "teal": 482,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            482
          ]
        },
        {
          "teal": 485,
          "source": "contracts/ARC200.algo.ts:85",
          "errorMessage": "argument 0 (sender) for arc200_allowance must be a address",
          "pc": [
            483
          ]
        },
        {
          "teal": 488,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            484,
            485,
            486
          ]
        },
        {
          "teal": 489,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            487
          ]
        },
        {
          "teal": 490,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            488
          ]
        },
        {
          "teal": 491,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            489
          ]
        },
        {
          "teal": 492,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            490
          ]
        },
        {
          "teal": 495,
          "source": "contracts/ARC200.algo.ts:85",
          "errorMessage": "argument 1 (owner) for arc200_allowance must be a address",
          "pc": [
            491
          ]
        },
        {
          "teal": 498,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            492,
            493,
            494
          ]
        },
        {
          "teal": 499,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            495
          ]
        },
        {
          "teal": 500,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            496
          ]
        },
        {
          "teal": 501,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            497
          ]
        },
        {
          "teal": 502,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            498
          ]
        },
        {
          "teal": 505,
          "source": "contracts/ARC200.algo.ts:85",
          "errorMessage": "arc200_allowance return value overflowed 256 bits",
          "pc": [
            499
          ]
        },
        {
          "teal": 506,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            500
          ]
        },
        {
          "teal": 507,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            501
          ]
        },
        {
          "teal": 508,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            502
          ]
        },
        {
          "teal": 509,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            503
          ]
        },
        {
          "teal": 510,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            504
          ]
        },
        {
          "teal": 511,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            505
          ]
        },
        {
          "teal": 512,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            506
          ]
        },
        {
          "teal": 513,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            507
          ]
        },
        {
          "teal": 514,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            508
          ]
        },
        {
          "teal": 515,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            509
          ]
        },
        {
          "teal": 516,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            510
          ]
        },
        {
          "teal": 517,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            511
          ]
        },
        {
          "teal": 518,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            512
          ]
        },
        {
          "teal": 522,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            513,
            514,
            515
          ]
        },
        {
          "teal": 526,
          "source": "contracts/ARC200.algo.ts:86",
          "pc": [
            516,
            517
          ]
        },
        {
          "teal": 527,
          "source": "contracts/ARC200.algo.ts:86",
          "pc": [
            518,
            519
          ]
        },
        {
          "teal": 528,
          "source": "contracts/ARC200.algo.ts:86",
          "pc": [
            520
          ]
        },
        {
          "teal": 529,
          "source": "contracts/ARC200.algo.ts:86",
          "pc": [
            521
          ]
        },
        {
          "teal": 532,
          "source": "contracts/ARC200.algo.ts:86",
          "errorMessage": "box value does not exist: this.allowances({ owner: owner, spender: sender }).value",
          "pc": [
            522
          ]
        },
        {
          "teal": 533,
          "source": "contracts/ARC200.algo.ts:85",
          "pc": [
            523
          ]
        },
        {
          "teal": 536,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            524
          ]
        },
        {
          "teal": 537,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            525
          ]
        },
        {
          "teal": 540,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            526,
            527,
            528,
            529,
            530,
            531
          ]
        },
        {
          "teal": 541,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            532,
            533,
            534
          ]
        },
        {
          "teal": 542,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            535,
            536,
            537,
            538
          ]
        },
        {
          "teal": 545,
          "source": "contracts/ARC200.algo.ts:8",
          "errorMessage": "this contract does not implement the given ABI method for create NoOp",
          "pc": [
            539
          ]
        },
        {
          "teal": 548,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            540,
            541,
            542,
            543,
            544,
            545
          ]
        },
        {
          "teal": 549,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            546,
            547,
            548,
            549,
            550,
            551
          ]
        },
        {
          "teal": 550,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            552,
            553,
            554,
            555,
            556,
            557
          ]
        },
        {
          "teal": 551,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            558,
            559,
            560,
            561,
            562,
            563
          ]
        },
        {
          "teal": 552,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            564,
            565,
            566,
            567,
            568,
            569
          ]
        },
        {
          "teal": 553,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            570,
            571,
            572,
            573,
            574,
            575
          ]
        },
        {
          "teal": 554,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            576,
            577,
            578,
            579,
            580,
            581
          ]
        },
        {
          "teal": 555,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            582,
            583,
            584,
            585,
            586,
            587
          ]
        },
        {
          "teal": 556,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            588,
            589,
            590,
            591,
            592,
            593
          ]
        },
        {
          "teal": 557,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            594,
            595,
            596
          ]
        },
        {
          "teal": 558,
          "source": "contracts/ARC200.algo.ts:8",
          "pc": [
            597,
            598,
            599,
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610,
            611,
            612,
            613,
            614,
            615,
            616
          ]
        },
        {
          "teal": 561,
          "source": "contracts/ARC200.algo.ts:8",
          "errorMessage": "this contract does not implement the given ABI method for call NoOp",
          "pc": [
            617
          ]
        }
      ],
      "pcOffsetMethod": "none"
    },
    "clear": {
      "sourceInfo": [],
      "pcOffsetMethod": "none"
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "byteCode": {
    "approval": "CiAEIAGAAgAmBAQVH3x1IP//////////////////////////////////////////AQAAMRgUgQYLMRkIjQwBxgAAAAAAAAAAAAABuAAAAAAAAAAAAAAAKIgABFCwI0OKAAGABG5hbWVkiSiIAARQsCNDigABgAZzeW1ib2xkiSiIAA4WSZOBCA5EVwcBULAjQ4oAAYAIZGVjaW1hbHNkF4koiAASSZMkDkQprEkVSSIJTFJQsCNDigABgAt0b3RhbFN1cHBseWSJKDYaAUkVIhJEiAASSZMkDkQprEkVSSIJTFJQsCNDigEBi/++RImKAwGL/75Ei/2hi/9Mv4v+vkSL/aCL/ky/gAR5g8Nci/+L/lCL/VBQsCOJKDYaA0kVIhJENhoCSRUiEkQ2GgFJFSISRIgACSolTwJUULAjQ4oDASuL/zEAUIwAiwC+RIv9p0SLAL5Ei/2hiwBMv4v9i/6L/4j/iYwAiSg2GgJJFSISRDYaAUkVIhJEiAAJKiVPAlRQsCNDigIBi/6L/zEAiP9diSg2GgJJFSISRDYaAUkVIhJEiAAJKiVPAlRQsCNDigIBKzEAi/9QjACLAL1MSBRBAAiLAIv+v0IAC4sAvkSL/qCLAEy/I4wAiSg2GgJJFSISRDYaAUkVIhJEiAASSZMkDkQprEkVSSIJTFJQsCNDigIBi/+L/lC+RIkjQ4AEuER7NjYaAI4B//EAgARlfRPsgAS2rholgASE7BPVgATsmWBBgASC5XPEgARKlo+PgATacCW5gAS1QiElgAS7sxnzNhoAjgn97v4B/hb+OP5g/rH/AP8q/3IA",
    "clear": "Cg=="
  },
  "compilerInfo": {
    "compiler": "algod",
    "compilerVersion": {
      "major": 4,
      "minor": 0,
      "patch": 2,
      "commitHash": "6b940281"
    }
  }
}